{
  "name": "table",
  "docZh": {
    "meta": {
      "category": "Components",
      "cols": 1,
      "type": "数据展示",
      "title": "Table",
      "subtitle": "表格",
      "cover": "https://gw.alipayobjects.com/zos/alicdn/f-SbcX2Lx/Table.svg",
      "description": "Angular 表格组件，展示行列数据。当有大量结构化的数据需要展现时；当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。Table 组件同时具备了易用性和高度可定制性在 nz-table 组件中完整的暴露了 W3C标准 <table> 的所有组成部分，你可以像使用 table 元素一样使用..."
    },
    "path": "components/table/doc/index.zh-CN.md",
    "whenToUse": "<p>展示行列数据。</p>\n<h2 id=\"何时使用\"><span>何时使用</span><a onclick=\"window.location.hash = '何时使用'\" class=\"anchor\">#</a></h2><ul>\n<li>  当有大量结构化的数据需要展现时；</li>\n<li>  当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。</li>\n</ul>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NzTableModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/table'</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"如何使用\"><span>如何使用</span><a onclick=\"window.location.hash = '如何使用'\" class=\"anchor\">#</a></h2><p>Table 组件同时具备了易用性和高度可定制性</p>\n<h3 id=\"高度定制\"><span>高度定制</span><a onclick=\"window.location.hash = '高度定制'\" class=\"anchor\">#</a></h3><p>在 <code>nz-table</code> 组件中完整的暴露了 <a href=\"https://www.w3.org/TR/html401/struct/tables.html\" target=\"_blank\" rel=\"noopener\"><code>W3C标准 &lt;table&gt;</code></a> 的所有组成部分，你可以像使用 <code>table</code> 元素一样使用 <code>nz-table</code> ，根据依据业务需求，使用者可以自由的控制任何一个部分的样式、内容、逻辑和事件绑定。</p>\n<h3 id=\"组件增强\"><span>组件增强</span><a onclick=\"window.location.hash = '组件增强'\" class=\"anchor\">#</a></h3><p>在 <code>nz-table</code>, <code>thead</code>, <code>th</code>, <code>td</code> 等多个暴露的元素上，组件提供了增强语法，经过配置之后可以很方便的实现多选、过滤、排序、固定列、固定表头、服务端分页等功能。</p>\n<h3 id=\"数据处理\"><span>数据处理</span><a onclick=\"window.location.hash = '数据处理'\" class=\"anchor\">#</a></h3><p>将数据传入<code>[nzData]</code>，经过组件处理之后（包括分页、排序、筛选等），通过 <a href=\"https://angular.io/guide/template-syntax#statement-context\" target=\"_blank\" rel=\"noopener\">模板变量</a> 获取当前展示表格部分的数据，使用 <code>*ngFor</code> 依据需求将数据渲染。</p>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-table</span> <span class=\"token attr-name\">#basicTable</span> <span class=\"token attr-name\">[nzData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Age<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Action<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let data of basicTable.data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123;&#123;data.name&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123;&#123;data.age&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123;&#123;data.address&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Action 一 &#123;&#123;data.name&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-divider</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-divider</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Delete<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-table</span><span class=\"token punctuation\">></span></span></code></pre>\n",
    "api": "<h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><h3 id=\"nz-table\"><span>nz-table</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-table'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>全局配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzData]</code></td>\n<td>数据数组</td>\n<td><code>any[]</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFrontPagination]</code></td>\n<td>是否在前端对数据进行分页，如果在服务器分页数据或者需要在前端显示全部数据时传入 false</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTotal]</code></td>\n<td>当前总数据，在服务器渲染时需要传入</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageIndex]</code></td>\n<td>当前页码，可双向绑定</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSize]</code></td>\n<td>每页展示多少数据，可双向绑定</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowPagination]</code></td>\n<td>是否显示分页器</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationPosition]</code></td>\n<td>指定分页显示的位置</td>\n<td><code>&#39;top&#39; | &#39;bottom&#39; | &#39;both&#39;</code></td>\n<td><code>bottom</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationType]</code></td>\n<td>指定分页显示的尺寸</td>\n<td><code>&#39;default&#39; | &#39;small&#39;</code></td>\n<td><code>default</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzBordered]</code></td>\n<td>是否展示外边框和列边框</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzOuterBordered]</code></td>\n<td>是否显示外边框</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzWidthConfig]</code></td>\n<td>表头分组时指定每列宽度，与 <code>th</code> 的 <code>[nzWidth]</code> 不可混用</td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzSize]</code></td>\n<td>正常或迷你类型</td>\n<td><code>&#39;middle&#39; | &#39;small&#39; | &#39;default&#39;</code></td>\n<td><code>&#39;default&#39;</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzLoading]</code></td>\n<td>页面是否加载中</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzLoadingIndicator]</code></td>\n<td>加载指示符</td>\n<td><code>TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzLoadingDelay]</code></td>\n<td>延迟显示加载效果的时间（防止闪烁）</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzScroll]</code></td>\n<td>横向或纵向支持滚动，也可用于指定滚动区域的宽高度：<code>&#123; x: &quot;300px&quot;, y: &quot;300px&quot; &#125;</code></td>\n<td><code>object</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTitle]</code></td>\n<td>表格标题</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFooter]</code></td>\n<td>表格尾部</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzNoResult]</code></td>\n<td>无数据时显示内容</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSizeOptions]</code></td>\n<td>页数选择器可选值</td>\n<td><code>number[]</code></td>\n<td><code>[ 10, 20, 30, 40, 50 ]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowQuickJumper]</code></td>\n<td>是否可以快速跳转至某页</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzShowSizeChanger]</code></td>\n<td>是否可以改变 <code>nzPageSize</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzShowTotal]</code></td>\n<td>用于显示数据总量和当前数据范围，用法参照 Pagination 组件</td>\n<td><code>TemplateRef&lt;&#123; $implicit: number, range: [ number, number ] &#125;&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzItemRender]</code></td>\n<td>用于自定义页码的结构，用法参照 Pagination 组件</td>\n<td><code>TemplateRef&lt;&#123; $implicit: &#39;page&#39; | &#39;prev&#39; | &#39;next&#39;, page: number &#125;&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzHideOnSinglePage]</code></td>\n<td>只有一页时是否隐藏分页器</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzSimple]</code></td>\n<td>当添加该属性时，显示为简单分页</td>\n<td><code>boolean</code></td>\n<td>-</td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzTemplateMode]</code></td>\n<td>模板模式，无需将数据传递给 <code>nzData</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualItemSize]</code></td>\n<td>虚拟滚动时每一列的高度，与 <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk itemSize</a> 相同</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMaxBufferPx]</code></td>\n<td>缓冲区最大像素高度，与 <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk maxBufferPx</a> 相同</td>\n<td><code>number</code></td>\n<td><code>200</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMinBufferPx]</code></td>\n<td>缓冲区最小像素高度，低于该值时将加载新结构，与 <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk minBufferPx</a> 相同</td>\n<td><code>number</code></td>\n<td><code>100</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualForTrackBy]</code></td>\n<td>虚拟滚动数据 <code>TrackByFunction</code> 函数</td>\n<td><code>TrackByFunction&lt;T&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageIndexChange)</code></td>\n<td>当前页码改变时的回调函数</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageSizeChange)</code></td>\n<td>页数改变时的回调函数</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzCurrentPageDataChange)</code></td>\n<td>当前页面展示数据改变的回调函数</td>\n<td><code>EventEmitter&lt;any[]&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzQueryParams)</code></td>\n<td>当服务端分页、筛选、排序时，用于获得参数，具体见示例</td>\n<td><code>EventEmitter&lt;NzTableQueryParams&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"th\"><span>th</span><a onclick=\"window.location.hash = 'th'\" class=\"anchor\">#</a></h3><p>勾选属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>是否添加checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>checkbox 是否禁用</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td>checkbox indeterminate 状态</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>checkbox 是否被选中，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>选中的回调</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>下拉选择属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowRowSelection]</code></td>\n<td>是否显示下拉选择</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSelections]</code></td>\n<td>下拉选择的内容 <code>text</code> 及回调函数 <code>onSelect</code></td>\n<td><code>Array&lt;&#123; text: string, onSelect: any &#125;&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>排序属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowSort]</code></td>\n<td>是否显示排序</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSortFn]</code></td>\n<td>排序函数，前端排序使用一个函数(参考 Array.sort 的 compareFunction)，服务端排序时传入 true</td>\n<td>`((a: any, b: any, sortOrder?: string) =&gt; number)</td>\n<td>boolean`</td>\n</tr>\n<tr>\n<td><code>[nzSortDirections]</code></td>\n<td>支持的排序方式，取值为 <code>&#39;ascend&#39;</code>, <code>&#39;descend&#39;</code>, <code>null</code></td>\n<td><code>Array&lt;&#39;ascend&#39; | &#39;descend&#39; | null&gt;</code></td>\n<td><code>[&#39;ascend&#39;, &#39;descend&#39;, null]</code></td>\n</tr>\n<tr>\n<td><code>[nzSortOrder]</code></td>\n<td>当前排序状态，可双向绑定</td>\n<td>&#39;descend&#39;</td>\n<td>&#39;ascend&#39;</td>\n</tr>\n<tr>\n<td><code>(nzSortOrderChange)</code></td>\n<td>排序状态改变回调</td>\n<td><code>EventEmitter&lt;&#39;descend&#39; | &#39;ascend&#39; | null&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>过滤属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowFilter]</code></td>\n<td>是否显示过滤</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterFn]</code></td>\n<td>前端排序时，确定筛选的运行函数，服务端排序时，传入 true</td>\n<td>`((value: any, data: any) =&gt; boolean;)</td>\n<td>boolean`</td>\n</tr>\n<tr>\n<td><code>[nzFilters]</code></td>\n<td>过滤器内容, 显示数据 <code>text</code>，回调函数传出 <code>value</code>，设置 <code>byDefault</code> 以默认应用过滤规则</td>\n<td><code>Array&lt;&#123; text: string; value: any; byDefault?: boolean &#125;&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterMultiple]</code></td>\n<td>是否为多选过滤器</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>(nzFilterChange)</code></td>\n<td>过滤器内容选择的 value 数据回调</td>\n<td><code>EventEmitter&lt;any[] | any&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>样式属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzWidth]</code></td>\n<td>指定该列宽度，表头未分组时可用</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzLeft]</code></td>\n<td>左侧距离，用于固定左侧列，当为 <code>true</code> 时自动计算，为 <code>false</code> 时停止固定</td>\n<td><code>string | boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>右侧距离，用于固定右侧列，当为 <code>true</code> 时自动计算，为 <code>false</code> 时停止固定</td>\n<td><code>string | boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>设置列内容的对齐方式</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>是否折行显示</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>超过宽度将自动省略，暂不支持和排序筛选一起使用。仅当表格布局将为 <code>nzTableLayout=&quot;fixed&quot;</code>时可用</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[colSpan]</code></td>\n<td>每单元格中扩展列的数量</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n<tr>\n<td><code>[rowSpan]</code></td>\n<td>每单元格中扩展行的数量</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n</tbody></table>\n<p>其他</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzColumnKey]</code></td>\n<td>当前列的key，用于服务端筛选和排序使用</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"td\"><span>td</span><a onclick=\"window.location.hash = 'td'\" class=\"anchor\">#</a></h3><p>勾选属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>是否添加checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>checkbox 是否禁用</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td>checkbox indeterminate 状态</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>checkbox 是否被选中，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>选中的回调</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>展开属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowExpand]</code></td>\n<td>是否显示展开按钮</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzExpand]</code></td>\n<td>当前展开按钮状态，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzExpandChange)</code></td>\n<td>当前展开按钮状态改变回调函数</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>样式属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzLeft]</code></td>\n<td>左侧距离，用于固定左侧列，当为 <code>true</code> 时自动计算，为 <code>false</code> 时停止固定</td>\n<td><code>string | boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>右侧距离，用于固定右侧列，当为 <code>true</code> 时自动计算，为 <code>false</code> 时停止固定</td>\n<td><code>string | boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>设置列内容的对齐方式</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>是否折行显示</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>超过宽度将自动省略，暂不支持和排序筛选一起使用。仅当表格布局将为 <code>nzTableLayout=&quot;fixed&quot;</code>时可用</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<p>其他</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzIndentSize]</code></td>\n<td>展示树形数据时，每层缩进的宽度，以 px 为单位</td>\n<td><code>number</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"tr\"><span>tr</span><a onclick=\"window.location.hash = 'tr'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzExpand]</code></td>\n<td>当前列是否展开，与 <code>td</code> 上的 <code>nzExpand</code> 属性配合使用</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-filter-trigger\"><span>nz-filter-trigger</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-filter-trigger'\" class=\"anchor\">#</a></h3><p>用于自定义筛选功能</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzDropdownMenu]</code></td>\n<td>Dropdown 下拉菜单组件</td>\n<td><code>NzDropdownMenuComponent</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzVisible]</code></td>\n<td>菜单是否显示，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzActive]</code></td>\n<td>是否激活选中图标效果</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzHasBackdrop]</code></td>\n<td>是否附带背景板</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>(nzVisibleChange)</code></td>\n<td>菜单显示状态改变时调用，参数为 nzVisible</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"[nz-virtual-scroll]\"><span>[nz-virtual-scroll]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-virtual-scroll]'\" class=\"anchor\">#</a></h3><p>虚拟滚动时配合 <code>ng-template</code> 使用, 格式为： <code>TemplateRef&lt;&#123; $implicit: any, index: number &#125;&gt;</code>.</p>\n<h2 id=\"注意\"><span>注意</span><a onclick=\"window.location.hash = '注意'\" class=\"anchor\">#</a></h2><p>为了获得更好的性能，NG-ZORRO 所有组件都运行在 <a href=\"https://angular.io/api/core/ChangeDetectionStrategy\" target=\"_blank\" rel=\"noopener\">OnPush</a> 模式下，这意味着对 <code>@Input()</code> 数据的 mutate 将不会生效，请使用 immutable 方式操作数组或者对象。</p>\n<pre class=\"language-typescript\"><code><span class=\"token comment\" spellcheck=\"true\">// 增加数据</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  key    <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n  name   <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`Edward King </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n  age    <span class=\"token punctuation\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span>\n  address<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`London, Park Lane no. </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">`</span></span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// 删除数据</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span><span class=\"token operator\">></span> d<span class=\"token punctuation\">.</span>key <span class=\"token operator\">!==</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>开发者也可以使用 <a href=\"https://immerjs.github.io/immer/docs/introduction\" target=\"_blank\" rel=\"noopener\">immer</a> 获得更好的操作体验</p>\n"
  },
  "docs": {
    "zh-CN": {
      "meta": {
        "category": "Components",
        "cols": 1,
        "type": "数据展示",
        "title": "Table",
        "subtitle": "表格",
        "cover": "https://gw.alipayobjects.com/zos/alicdn/f-SbcX2Lx/Table.svg",
        "description": "Angular 表格组件，展示行列数据。当有大量结构化的数据需要展现时；当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。Table 组件同时具备了易用性和高度可定制性在 nz-table 组件中完整的暴露了 W3C标准 <table> 的所有组成部分，你可以像使用 table 元素一样使用..."
      },
      "path": "components/table/doc/index.zh-CN.md",
      "whenToUse": "<p>展示行列数据。</p>\n<h2 id=\"何时使用\"><span>何时使用</span><a onclick=\"window.location.hash = '何时使用'\" class=\"anchor\">#</a></h2><ul>\n<li>  当有大量结构化的数据需要展现时；</li>\n<li>  当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。</li>\n</ul>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NzTableModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/table'</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"如何使用\"><span>如何使用</span><a onclick=\"window.location.hash = '如何使用'\" class=\"anchor\">#</a></h2><p>Table 组件同时具备了易用性和高度可定制性</p>\n<h3 id=\"高度定制\"><span>高度定制</span><a onclick=\"window.location.hash = '高度定制'\" class=\"anchor\">#</a></h3><p>在 <code>nz-table</code> 组件中完整的暴露了 <a href=\"https://www.w3.org/TR/html401/struct/tables.html\" target=\"_blank\" rel=\"noopener\"><code>W3C标准 &lt;table&gt;</code></a> 的所有组成部分，你可以像使用 <code>table</code> 元素一样使用 <code>nz-table</code> ，根据依据业务需求，使用者可以自由的控制任何一个部分的样式、内容、逻辑和事件绑定。</p>\n<h3 id=\"组件增强\"><span>组件增强</span><a onclick=\"window.location.hash = '组件增强'\" class=\"anchor\">#</a></h3><p>在 <code>nz-table</code>, <code>thead</code>, <code>th</code>, <code>td</code> 等多个暴露的元素上，组件提供了增强语法，经过配置之后可以很方便的实现多选、过滤、排序、固定列、固定表头、服务端分页等功能。</p>\n<h3 id=\"数据处理\"><span>数据处理</span><a onclick=\"window.location.hash = '数据处理'\" class=\"anchor\">#</a></h3><p>将数据传入<code>[nzData]</code>，经过组件处理之后（包括分页、排序、筛选等），通过 <a href=\"https://angular.io/guide/template-syntax#statement-context\" target=\"_blank\" rel=\"noopener\">模板变量</a> 获取当前展示表格部分的数据，使用 <code>*ngFor</code> 依据需求将数据渲染。</p>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-table</span> <span class=\"token attr-name\">#basicTable</span> <span class=\"token attr-name\">[nzData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Age<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Action<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let data of basicTable.data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123;&#123;data.name&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123;&#123;data.age&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>&#123;&#123;data.address&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Action 一 &#123;&#123;data.name&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-divider</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-divider</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Delete<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-table</span><span class=\"token punctuation\">></span></span></code></pre>\n",
      "api": "<h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><h3 id=\"nz-table\"><span>nz-table</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-table'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>全局配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzData]</code></td>\n<td>数据数组</td>\n<td><code>any[]</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFrontPagination]</code></td>\n<td>是否在前端对数据进行分页，如果在服务器分页数据或者需要在前端显示全部数据时传入 false</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTotal]</code></td>\n<td>当前总数据，在服务器渲染时需要传入</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageIndex]</code></td>\n<td>当前页码，可双向绑定</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSize]</code></td>\n<td>每页展示多少数据，可双向绑定</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowPagination]</code></td>\n<td>是否显示分页器</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationPosition]</code></td>\n<td>指定分页显示的位置</td>\n<td><code>&#39;top&#39; | &#39;bottom&#39; | &#39;both&#39;</code></td>\n<td><code>bottom</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationType]</code></td>\n<td>指定分页显示的尺寸</td>\n<td><code>&#39;default&#39; | &#39;small&#39;</code></td>\n<td><code>default</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzBordered]</code></td>\n<td>是否展示外边框和列边框</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzOuterBordered]</code></td>\n<td>是否显示外边框</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzWidthConfig]</code></td>\n<td>表头分组时指定每列宽度，与 <code>th</code> 的 <code>[nzWidth]</code> 不可混用</td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzSize]</code></td>\n<td>正常或迷你类型</td>\n<td><code>&#39;middle&#39; | &#39;small&#39; | &#39;default&#39;</code></td>\n<td><code>&#39;default&#39;</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzLoading]</code></td>\n<td>页面是否加载中</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzLoadingIndicator]</code></td>\n<td>加载指示符</td>\n<td><code>TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzLoadingDelay]</code></td>\n<td>延迟显示加载效果的时间（防止闪烁）</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzScroll]</code></td>\n<td>横向或纵向支持滚动，也可用于指定滚动区域的宽高度：<code>&#123; x: &quot;300px&quot;, y: &quot;300px&quot; &#125;</code></td>\n<td><code>object</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTitle]</code></td>\n<td>表格标题</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFooter]</code></td>\n<td>表格尾部</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzNoResult]</code></td>\n<td>无数据时显示内容</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSizeOptions]</code></td>\n<td>页数选择器可选值</td>\n<td><code>number[]</code></td>\n<td><code>[ 10, 20, 30, 40, 50 ]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowQuickJumper]</code></td>\n<td>是否可以快速跳转至某页</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzShowSizeChanger]</code></td>\n<td>是否可以改变 <code>nzPageSize</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzShowTotal]</code></td>\n<td>用于显示数据总量和当前数据范围，用法参照 Pagination 组件</td>\n<td><code>TemplateRef&lt;&#123; $implicit: number, range: [ number, number ] &#125;&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzItemRender]</code></td>\n<td>用于自定义页码的结构，用法参照 Pagination 组件</td>\n<td><code>TemplateRef&lt;&#123; $implicit: &#39;page&#39; | &#39;prev&#39; | &#39;next&#39;, page: number &#125;&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzHideOnSinglePage]</code></td>\n<td>只有一页时是否隐藏分页器</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzSimple]</code></td>\n<td>当添加该属性时，显示为简单分页</td>\n<td><code>boolean</code></td>\n<td>-</td>\n<td>✅</td>\n</tr>\n<tr>\n<td><code>[nzTemplateMode]</code></td>\n<td>模板模式，无需将数据传递给 <code>nzData</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualItemSize]</code></td>\n<td>虚拟滚动时每一列的高度，与 <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk itemSize</a> 相同</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMaxBufferPx]</code></td>\n<td>缓冲区最大像素高度，与 <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk maxBufferPx</a> 相同</td>\n<td><code>number</code></td>\n<td><code>200</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMinBufferPx]</code></td>\n<td>缓冲区最小像素高度，低于该值时将加载新结构，与 <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk minBufferPx</a> 相同</td>\n<td><code>number</code></td>\n<td><code>100</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualForTrackBy]</code></td>\n<td>虚拟滚动数据 <code>TrackByFunction</code> 函数</td>\n<td><code>TrackByFunction&lt;T&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageIndexChange)</code></td>\n<td>当前页码改变时的回调函数</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageSizeChange)</code></td>\n<td>页数改变时的回调函数</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzCurrentPageDataChange)</code></td>\n<td>当前页面展示数据改变的回调函数</td>\n<td><code>EventEmitter&lt;any[]&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzQueryParams)</code></td>\n<td>当服务端分页、筛选、排序时，用于获得参数，具体见示例</td>\n<td><code>EventEmitter&lt;NzTableQueryParams&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"th\"><span>th</span><a onclick=\"window.location.hash = 'th'\" class=\"anchor\">#</a></h3><p>勾选属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>是否添加checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>checkbox 是否禁用</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td>checkbox indeterminate 状态</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>checkbox 是否被选中，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>选中的回调</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>下拉选择属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowRowSelection]</code></td>\n<td>是否显示下拉选择</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSelections]</code></td>\n<td>下拉选择的内容 <code>text</code> 及回调函数 <code>onSelect</code></td>\n<td><code>Array&lt;&#123; text: string, onSelect: any &#125;&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>排序属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowSort]</code></td>\n<td>是否显示排序</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSortFn]</code></td>\n<td>排序函数，前端排序使用一个函数(参考 Array.sort 的 compareFunction)，服务端排序时传入 true</td>\n<td>`((a: any, b: any, sortOrder?: string) =&gt; number)</td>\n<td>boolean`</td>\n</tr>\n<tr>\n<td><code>[nzSortDirections]</code></td>\n<td>支持的排序方式，取值为 <code>&#39;ascend&#39;</code>, <code>&#39;descend&#39;</code>, <code>null</code></td>\n<td><code>Array&lt;&#39;ascend&#39; | &#39;descend&#39; | null&gt;</code></td>\n<td><code>[&#39;ascend&#39;, &#39;descend&#39;, null]</code></td>\n</tr>\n<tr>\n<td><code>[nzSortOrder]</code></td>\n<td>当前排序状态，可双向绑定</td>\n<td>&#39;descend&#39;</td>\n<td>&#39;ascend&#39;</td>\n</tr>\n<tr>\n<td><code>(nzSortOrderChange)</code></td>\n<td>排序状态改变回调</td>\n<td><code>EventEmitter&lt;&#39;descend&#39; | &#39;ascend&#39; | null&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>过滤属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowFilter]</code></td>\n<td>是否显示过滤</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterFn]</code></td>\n<td>前端排序时，确定筛选的运行函数，服务端排序时，传入 true</td>\n<td>`((value: any, data: any) =&gt; boolean;)</td>\n<td>boolean`</td>\n</tr>\n<tr>\n<td><code>[nzFilters]</code></td>\n<td>过滤器内容, 显示数据 <code>text</code>，回调函数传出 <code>value</code>，设置 <code>byDefault</code> 以默认应用过滤规则</td>\n<td><code>Array&lt;&#123; text: string; value: any; byDefault?: boolean &#125;&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterMultiple]</code></td>\n<td>是否为多选过滤器</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>(nzFilterChange)</code></td>\n<td>过滤器内容选择的 value 数据回调</td>\n<td><code>EventEmitter&lt;any[] | any&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>样式属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzWidth]</code></td>\n<td>指定该列宽度，表头未分组时可用</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzLeft]</code></td>\n<td>左侧距离，用于固定左侧列，当为 <code>true</code> 时自动计算，为 <code>false</code> 时停止固定</td>\n<td><code>string | boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>右侧距离，用于固定右侧列，当为 <code>true</code> 时自动计算，为 <code>false</code> 时停止固定</td>\n<td><code>string | boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>设置列内容的对齐方式</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>是否折行显示</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>超过宽度将自动省略，暂不支持和排序筛选一起使用。仅当表格布局将为 <code>nzTableLayout=&quot;fixed&quot;</code>时可用</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[colSpan]</code></td>\n<td>每单元格中扩展列的数量</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n<tr>\n<td><code>[rowSpan]</code></td>\n<td>每单元格中扩展行的数量</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n</tbody></table>\n<p>其他</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzColumnKey]</code></td>\n<td>当前列的key，用于服务端筛选和排序使用</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"td\"><span>td</span><a onclick=\"window.location.hash = 'td'\" class=\"anchor\">#</a></h3><p>勾选属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>是否添加checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>checkbox 是否禁用</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td>checkbox indeterminate 状态</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>checkbox 是否被选中，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>选中的回调</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>展开属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowExpand]</code></td>\n<td>是否显示展开按钮</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzExpand]</code></td>\n<td>当前展开按钮状态，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzExpandChange)</code></td>\n<td>当前展开按钮状态改变回调函数</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>样式属性</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzLeft]</code></td>\n<td>左侧距离，用于固定左侧列，当为 <code>true</code> 时自动计算，为 <code>false</code> 时停止固定</td>\n<td><code>string | boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>右侧距离，用于固定右侧列，当为 <code>true</code> 时自动计算，为 <code>false</code> 时停止固定</td>\n<td><code>string | boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>设置列内容的对齐方式</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>是否折行显示</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>超过宽度将自动省略，暂不支持和排序筛选一起使用。仅当表格布局将为 <code>nzTableLayout=&quot;fixed&quot;</code>时可用</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<p>其他</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzIndentSize]</code></td>\n<td>展示树形数据时，每层缩进的宽度，以 px 为单位</td>\n<td><code>number</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"tr\"><span>tr</span><a onclick=\"window.location.hash = 'tr'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzExpand]</code></td>\n<td>当前列是否展开，与 <code>td</code> 上的 <code>nzExpand</code> 属性配合使用</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-filter-trigger\"><span>nz-filter-trigger</span><label class=\"api-type-label component\">component</label><a onclick=\"window.location.hash = 'nz-filter-trigger'\" class=\"anchor\">#</a></h3><p>用于自定义筛选功能</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzDropdownMenu]</code></td>\n<td>Dropdown 下拉菜单组件</td>\n<td><code>NzDropdownMenuComponent</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzVisible]</code></td>\n<td>菜单是否显示，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzActive]</code></td>\n<td>是否激活选中图标效果</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzHasBackdrop]</code></td>\n<td>是否附带背景板</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>(nzVisibleChange)</code></td>\n<td>菜单显示状态改变时调用，参数为 nzVisible</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"[nz-virtual-scroll]\"><span>[nz-virtual-scroll]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-virtual-scroll]'\" class=\"anchor\">#</a></h3><p>虚拟滚动时配合 <code>ng-template</code> 使用, 格式为： <code>TemplateRef&lt;&#123; $implicit: any, index: number &#125;&gt;</code>.</p>\n<h2 id=\"注意\"><span>注意</span><a onclick=\"window.location.hash = '注意'\" class=\"anchor\">#</a></h2><p>为了获得更好的性能，NG-ZORRO 所有组件都运行在 <a href=\"https://angular.io/api/core/ChangeDetectionStrategy\" target=\"_blank\" rel=\"noopener\">OnPush</a> 模式下，这意味着对 <code>@Input()</code> 数据的 mutate 将不会生效，请使用 immutable 方式操作数组或者对象。</p>\n<pre class=\"language-typescript\"><code><span class=\"token comment\" spellcheck=\"true\">// 增加数据</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  key    <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n  name   <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`Edward King </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n  age    <span class=\"token punctuation\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span>\n  address<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`London, Park Lane no. </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">`</span></span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// 删除数据</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span><span class=\"token operator\">></span> d<span class=\"token punctuation\">.</span>key <span class=\"token operator\">!==</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>开发者也可以使用 <a href=\"https://immerjs.github.io/immer/docs/introduction\" target=\"_blank\" rel=\"noopener\">immer</a> 获得更好的操作体验</p>\n"
    }
  },
  "demoMap": {
    "ajax": {
      "meta": {
        "order": 9,
        "iframe": {
          "height": 360
        },
        "title": {
          "zh-CN": "远程加载数据"
        }
      },
      "zh": "<p>这个例子通过简单的 ajax 读取方式，演示了如何从服务端读取并展现数据，具有筛选、排序等功能以及页面 loading 效果。开发者可以自行接入其他数据处理方式。</p>\n<ul>\n<li>  分页：使用 <code>[nzFrontPagination]=&quot;false&quot;</code> 指定由服务端分页。</li>\n<li>  排序：使用 <code>[nzSortFn]=&quot;true&quot;</code> 指定由服务端排序，如果需要多列排序可使用 <code>[nzSortPriority]=&quot;true&quot;</code>。</li>\n<li>  筛选：使用 <code>[nzFilters]</code> 来指定筛选项，使用 <code>[nzFilterFn]=&quot;true&quot;</code> 指定由服务端筛选</li>\n<li>  参数传输：通过 <code>(nzQueryParams)</code> 服务端需要的参数，数据结构为</li>\n</ul>\n<pre class=\"language-typescript\"><code><span class=\"token punctuation\">&#123;</span>\n  pageIndex<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  pageSize<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  sort<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'ascend'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'descend'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">any</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>注意，此示例使用 <a href=\"https://randomuser.me\" target=\"_blank\" rel=\"noopener\">模拟接口</a>，展示数据可能不准确，请打开网络面板查看请求。</strong></p>\n",
      "name": "NzDemoTableAjaxComponent",
      "zhCode": "<nz-code-box\n  nzTitle=\"远程加载数据\"\n  [nzId]=\"'components-table-demo-ajax'\"\n  nzSelector=\"nz-demo-table-ajax\"\n  [nzLink]=\"'components-table-demo-ajax'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:table-ajax <name>\"\n  nzComponentName=\"NzDemoTableAjaxComponent\"\n  nzIframeSource=\"/iframe/#/table-ajax\"\n  [nzIframeHeight]=\"360\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/table/demo/ajax.md'\">\n\t<nz-demo-table-ajax demo></nz-demo-table-ajax>\n\t<div intro ngNonBindable>\n\t\t<p>这个例子通过简单的 ajax 读取方式，演示了如何从服务端读取并展现数据，具有筛选、排序等功能以及页面 loading 效果。开发者可以自行接入其他数据处理方式。</p>\n<ul>\n<li>  分页：使用 <code>[nzFrontPagination]=&quot;false&quot;</code> 指定由服务端分页。</li>\n<li>  排序：使用 <code>[nzSortFn]=&quot;true&quot;</code> 指定由服务端排序，如果需要多列排序可使用 <code>[nzSortPriority]=&quot;true&quot;</code>。</li>\n<li>  筛选：使用 <code>[nzFilters]</code> 来指定筛选项，使用 <code>[nzFilterFn]=&quot;true&quot;</code> 指定由服务端筛选</li>\n<li>  参数传输：通过 <code>(nzQueryParams)</code> 服务端需要的参数，数据结构为</li>\n</ul>\n<pre class=\"language-typescript\"><code><span class=\"token punctuation\">&#123;</span>\n  pageIndex<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  pageSize<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  sort<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'ascend'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'descend'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">any</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>注意，此示例使用 <a href=\"https://randomuser.me\" target=\"_blank\" rel=\"noopener\">模拟接口</a>，展示数据可能不准确，请打开网络面板查看请求。</strong></p>\n\n\t</div>\n</nz-code-box>\n",
      "zh-CN": "<nz-code-box\n  nzTitle=\"远程加载数据\"\n  [nzId]=\"'components-table-demo-ajax'\"\n  nzSelector=\"nz-demo-table-ajax\"\n  [nzLink]=\"'components-table-demo-ajax'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:table-ajax <name>\"\n  nzComponentName=\"NzDemoTableAjaxComponent\"\n  nzIframeSource=\"/iframe/#/table-ajax\"\n  [nzIframeHeight]=\"360\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/table/demo/ajax.md'\">\n\t<nz-demo-table-ajax demo></nz-demo-table-ajax>\n\t<div intro ngNonBindable>\n\t\t<p>这个例子通过简单的 ajax 读取方式，演示了如何从服务端读取并展现数据，具有筛选、排序等功能以及页面 loading 效果。开发者可以自行接入其他数据处理方式。</p>\n<ul>\n<li>  分页：使用 <code>[nzFrontPagination]=&quot;false&quot;</code> 指定由服务端分页。</li>\n<li>  排序：使用 <code>[nzSortFn]=&quot;true&quot;</code> 指定由服务端排序，如果需要多列排序可使用 <code>[nzSortPriority]=&quot;true&quot;</code>。</li>\n<li>  筛选：使用 <code>[nzFilters]</code> 来指定筛选项，使用 <code>[nzFilterFn]=&quot;true&quot;</code> 指定由服务端筛选</li>\n<li>  参数传输：通过 <code>(nzQueryParams)</code> 服务端需要的参数，数据结构为</li>\n</ul>\n<pre class=\"language-typescript\"><code><span class=\"token punctuation\">&#123;</span>\n  pageIndex<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  pageSize<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  sort<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'ascend'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'descend'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">any</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>注意，此示例使用 <a href=\"https://randomuser.me\" target=\"_blank\" rel=\"noopener\">模拟接口</a>，展示数据可能不准确，请打开网络面板查看请求。</strong></p>\n\n\t</div>\n</nz-code-box>\n",
      "ts": "import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, Injectable, OnInit } from '@angular/core';\nimport { NzTableQueryParams } from 'ng-zorro-antd/table';\nimport { Observable } from 'rxjs';\n\ninterface RandomUser {\n  gender: string;\n  email: string;\n  name: {\n    title: string;\n    first: string;\n    last: string;\n  };\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RandomUserService {\n  randomUserUrl = 'https://api.randomuser.me/';\n\n  getUsers(\n    pageIndex: number,\n    pageSize: number,\n    sortField: string | null,\n    sortOrder: string | null,\n    filters: Array<{ key: string; value: string[] }>\n  ): Observable<{ results: RandomUser[] }> {\n    let params = new HttpParams()\n      .append('page', `${pageIndex}`)\n      .append('results', `${pageSize}`)\n      .append('sortField', `${sortField}`)\n      .append('sortOrder', `${sortOrder}`);\n    filters.forEach(filter => {\n      filter.value.forEach(value => {\n        params = params.append(filter.key, value);\n      });\n    });\n    return this.http.get<{ results: RandomUser[] }>(`${this.randomUserUrl}`, { params });\n  }\n\n  constructor(private http: HttpClient) {}\n}\n\n@Component({\n  selector: 'nz-demo-table-ajax',\n  template: `\n    <nz-table\n      nzShowSizeChanger\n      [nzData]=\"listOfRandomUser\"\n      [nzFrontPagination]=\"false\"\n      [nzLoading]=\"loading\"\n      [nzTotal]=\"total\"\n      [nzPageSize]=\"pageSize\"\n      [nzPageIndex]=\"pageIndex\"\n      (nzQueryParams)=\"onQueryParamsChange($event)\"\n    >\n      <thead>\n        <tr>\n          <th nzColumnKey=\"name\" [nzSortFn]=\"true\">Name</th>\n          <th nzColumnKey=\"gender\" [nzFilters]=\"filterGender\" [nzFilterFn]=\"true\">Gender</th>\n          <th nzColumnKey=\"email\" [nzSortFn]=\"true\">Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of listOfRandomUser\">\n          <td>{{ data.name.first }} {{ data.name.last }}</td>\n          <td>{{ data.gender }}</td>\n          <td>{{ data.email }}</td>\n        </tr>\n      </tbody>\n    </nz-table>\n  `\n})\nexport class NzDemoTableAjaxComponent implements OnInit {\n  total = 1;\n  listOfRandomUser: RandomUser[] = [];\n  loading = true;\n  pageSize = 10;\n  pageIndex = 1;\n  filterGender = [\n    { text: 'male', value: 'male' },\n    { text: 'female', value: 'female' }\n  ];\n\n  loadDataFromServer(\n    pageIndex: number,\n    pageSize: number,\n    sortField: string | null,\n    sortOrder: string | null,\n    filter: Array<{ key: string; value: string[] }>\n  ): void {\n    this.loading = true;\n    this.randomUserService.getUsers(pageIndex, pageSize, sortField, sortOrder, filter).subscribe(data => {\n      this.loading = false;\n      this.total = 200; // mock the total data here\n      this.listOfRandomUser = data.results;\n    });\n  }\n\n  onQueryParamsChange(params: NzTableQueryParams): void {\n    console.log(params);\n    const { pageSize, pageIndex, sort, filter } = params;\n    const currentSort = sort.find(item => item.value !== null);\n    const sortField = (currentSort && currentSort.key) || null;\n    const sortOrder = (currentSort && currentSort.value) || null;\n    this.loadDataFromServer(pageIndex, pageSize, sortField, sortOrder, filter);\n  }\n\n  constructor(private randomUserService: RandomUserService) {}\n\n  ngOnInit(): void {\n    this.loadDataFromServer(this.pageIndex, this.pageSize, null, null, []);\n  }\n}\n"
    }
  },
  "i18n": [
    "zh-CN"
  ]
}