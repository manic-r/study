[
  {
    "name": "NzDemoTableAjaxComponent",
    "meta": {
      "order": 9,
      "iframe": {
        "height": 360
      },
      "title": {
        "zh-CN": "远程加载数据"
      }
    },
    "zh": "<p>这个例子通过简单的 ajax 读取方式，演示了如何从服务端读取并展现数据，具有筛选、排序等功能以及页面 loading 效果。开发者可以自行接入其他数据处理方式。</p>\n<ul>\n<li>  分页：使用 <code>[nzFrontPagination]=&quot;false&quot;</code> 指定由服务端分页。</li>\n<li>  排序：使用 <code>[nzSortFn]=&quot;true&quot;</code> 指定由服务端排序，如果需要多列排序可使用 <code>[nzSortPriority]=&quot;true&quot;</code>。</li>\n<li>  筛选：使用 <code>[nzFilters]</code> 来指定筛选项，使用 <code>[nzFilterFn]=&quot;true&quot;</code> 指定由服务端筛选</li>\n<li>  参数传输：通过 <code>(nzQueryParams)</code> 服务端需要的参数，数据结构为</li>\n</ul>\n<pre class=\"language-typescript\"><code><span class=\"token punctuation\">&#123;</span>\n  pageIndex<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  pageSize<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  sort<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'ascend'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'descend'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">any</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>注意，此示例使用 <a href=\"https://randomuser.me\" target=\"_blank\" rel=\"noopener\">模拟接口</a>，展示数据可能不准确，请打开网络面板查看请求。</strong></p>\n",
    "zhCode": "<nz-code-box\n  nzTitle=\"远程加载数据\"\n  [nzId]=\"'components-table-demo-ajax'\"\n  nzSelector=\"nz-demo-table-ajax\"\n  [nzLink]=\"'components-table-demo-ajax'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:table-ajax <name>\"\n  nzComponentName=\"NzDemoTableAjaxComponent\"\n  nzIframeSource=\"/iframe/#/table-ajax\"\n  [nzIframeHeight]=\"360\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/table/demo/ajax.md'\">\n\t<nz-demo-table-ajax demo></nz-demo-table-ajax>\n\t<div intro ngNonBindable>\n\t\t<p>这个例子通过简单的 ajax 读取方式，演示了如何从服务端读取并展现数据，具有筛选、排序等功能以及页面 loading 效果。开发者可以自行接入其他数据处理方式。</p>\n<ul>\n<li>  分页：使用 <code>[nzFrontPagination]=&quot;false&quot;</code> 指定由服务端分页。</li>\n<li>  排序：使用 <code>[nzSortFn]=&quot;true&quot;</code> 指定由服务端排序，如果需要多列排序可使用 <code>[nzSortPriority]=&quot;true&quot;</code>。</li>\n<li>  筛选：使用 <code>[nzFilters]</code> 来指定筛选项，使用 <code>[nzFilterFn]=&quot;true&quot;</code> 指定由服务端筛选</li>\n<li>  参数传输：通过 <code>(nzQueryParams)</code> 服务端需要的参数，数据结构为</li>\n</ul>\n<pre class=\"language-typescript\"><code><span class=\"token punctuation\">&#123;</span>\n  pageIndex<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  pageSize<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  sort<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'ascend'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'descend'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">any</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>注意，此示例使用 <a href=\"https://randomuser.me\" target=\"_blank\" rel=\"noopener\">模拟接口</a>，展示数据可能不准确，请打开网络面板查看请求。</strong></p>\n\n\t</div>\n</nz-code-box>\n",
    "zh-CN": "<nz-code-box\n  nzTitle=\"远程加载数据\"\n  [nzId]=\"'components-table-demo-ajax'\"\n  nzSelector=\"nz-demo-table-ajax\"\n  [nzLink]=\"'components-table-demo-ajax'\"\n  nzGenerateCommand=\"ng g ng-zorro-antd:table-ajax <name>\"\n  nzComponentName=\"NzDemoTableAjaxComponent\"\n  nzIframeSource=\"/iframe/#/table-ajax\"\n  [nzIframeHeight]=\"360\"\n  [nzHref]=\"'https://github.com/NG-ZORRO/ng-zorro-antd/edit/master/components/table/demo/ajax.md'\">\n\t<nz-demo-table-ajax demo></nz-demo-table-ajax>\n\t<div intro ngNonBindable>\n\t\t<p>这个例子通过简单的 ajax 读取方式，演示了如何从服务端读取并展现数据，具有筛选、排序等功能以及页面 loading 效果。开发者可以自行接入其他数据处理方式。</p>\n<ul>\n<li>  分页：使用 <code>[nzFrontPagination]=&quot;false&quot;</code> 指定由服务端分页。</li>\n<li>  排序：使用 <code>[nzSortFn]=&quot;true&quot;</code> 指定由服务端排序，如果需要多列排序可使用 <code>[nzSortPriority]=&quot;true&quot;</code>。</li>\n<li>  筛选：使用 <code>[nzFilters]</code> 来指定筛选项，使用 <code>[nzFilterFn]=&quot;true&quot;</code> 指定由服务端筛选</li>\n<li>  参数传输：通过 <code>(nzQueryParams)</code> 服务端需要的参数，数据结构为</li>\n</ul>\n<pre class=\"language-typescript\"><code><span class=\"token punctuation\">&#123;</span>\n  pageIndex<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  pageSize<span class=\"token punctuation\">:</span> <span class=\"token keyword\">number</span><span class=\"token punctuation\">;</span>\n  sort<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'ascend'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'descend'</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span> key<span class=\"token punctuation\">:</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">any</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>注意，此示例使用 <a href=\"https://randomuser.me\" target=\"_blank\" rel=\"noopener\">模拟接口</a>，展示数据可能不准确，请打开网络面板查看请求。</strong></p>\n\n\t</div>\n</nz-code-box>\n",
    "ts": "import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, Injectable, OnInit } from '@angular/core';\nimport { NzTableQueryParams } from 'ng-zorro-antd/table';\nimport { Observable } from 'rxjs';\n\ninterface RandomUser {\n  gender: string;\n  email: string;\n  name: {\n    title: string;\n    first: string;\n    last: string;\n  };\n}\n\n@Injectable({ providedIn: 'root' })\nexport class RandomUserService {\n  randomUserUrl = 'https://api.randomuser.me/';\n\n  getUsers(\n    pageIndex: number,\n    pageSize: number,\n    sortField: string | null,\n    sortOrder: string | null,\n    filters: Array<{ key: string; value: string[] }>\n  ): Observable<{ results: RandomUser[] }> {\n    let params = new HttpParams()\n      .append('page', `${pageIndex}`)\n      .append('results', `${pageSize}`)\n      .append('sortField', `${sortField}`)\n      .append('sortOrder', `${sortOrder}`);\n    filters.forEach(filter => {\n      filter.value.forEach(value => {\n        params = params.append(filter.key, value);\n      });\n    });\n    return this.http.get<{ results: RandomUser[] }>(`${this.randomUserUrl}`, { params });\n  }\n\n  constructor(private http: HttpClient) {}\n}\n\n@Component({\n  selector: 'nz-demo-table-ajax',\n  template: `\n    <nz-table\n      nzShowSizeChanger\n      [nzData]=\"listOfRandomUser\"\n      [nzFrontPagination]=\"false\"\n      [nzLoading]=\"loading\"\n      [nzTotal]=\"total\"\n      [nzPageSize]=\"pageSize\"\n      [nzPageIndex]=\"pageIndex\"\n      (nzQueryParams)=\"onQueryParamsChange($event)\"\n    >\n      <thead>\n        <tr>\n          <th nzColumnKey=\"name\" [nzSortFn]=\"true\">Name</th>\n          <th nzColumnKey=\"gender\" [nzFilters]=\"filterGender\" [nzFilterFn]=\"true\">Gender</th>\n          <th nzColumnKey=\"email\" [nzSortFn]=\"true\">Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let data of listOfRandomUser\">\n          <td>{{ data.name.first }} {{ data.name.last }}</td>\n          <td>{{ data.gender }}</td>\n          <td>{{ data.email }}</td>\n        </tr>\n      </tbody>\n    </nz-table>\n  `\n})\nexport class NzDemoTableAjaxComponent implements OnInit {\n  total = 1;\n  listOfRandomUser: RandomUser[] = [];\n  loading = true;\n  pageSize = 10;\n  pageIndex = 1;\n  filterGender = [\n    { text: 'male', value: 'male' },\n    { text: 'female', value: 'female' }\n  ];\n\n  loadDataFromServer(\n    pageIndex: number,\n    pageSize: number,\n    sortField: string | null,\n    sortOrder: string | null,\n    filter: Array<{ key: string; value: string[] }>\n  ): void {\n    this.loading = true;\n    this.randomUserService.getUsers(pageIndex, pageSize, sortField, sortOrder, filter).subscribe(data => {\n      this.loading = false;\n      this.total = 200; // mock the total data here\n      this.listOfRandomUser = data.results;\n    });\n  }\n\n  onQueryParamsChange(params: NzTableQueryParams): void {\n    console.log(params);\n    const { pageSize, pageIndex, sort, filter } = params;\n    const currentSort = sort.find(item => item.value !== null);\n    const sortField = (currentSort && currentSort.key) || null;\n    const sortOrder = (currentSort && currentSort.value) || null;\n    this.loadDataFromServer(pageIndex, pageSize, sortField, sortOrder, filter);\n  }\n\n  constructor(private randomUserService: RandomUserService) {}\n\n  ngOnInit(): void {\n    this.loadDataFromServer(this.pageIndex, this.pageSize, null, null, []);\n  }\n}\n"
  }
]