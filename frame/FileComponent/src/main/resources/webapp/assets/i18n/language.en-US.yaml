---
  hello: 
    component: 
      basic: 
        demo: "<p>Simple table with actions.</p>\n"
        title: "Basic Usage"
      bordered: 
        demo: "<p>Add border, title and footer for table.</p>\n"
        title: "border, title and footer"
      break-word: 
        demo: "<p>Insert line breaks within words with <code>nzBreakWord</code> to prevent text from overflowing its content box</p>\n"
        title: "Break Word"
    title: "Hello"
    subtitle: ""
    type: "Data Display"
    howToUse: "<p>A table displays rows of data.</p>\n<h2 id=\"when-to-use\"><span>When To Use</span><a onclick=\"window.location.hash = 'when-to-use'\" class=\"anchor\">#</a></h2><ul>\n<li>  To display a collection of structured data.</li>\n<li>  To sort, search, paginate and filter data.</li>\n</ul>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzTableModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/table'</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"how-to-use\"><span>How To Use</span><a onclick=\"window.location.hash = 'how-to-use'\" class=\"anchor\">#</a></h2><p>The Table component is both easy to use and highly customizable.</p>\n<h3 id=\"highly-customizable\"><span>Highly Customizable</span><a onclick=\"window.location.hash = 'highly-customizable'\" class=\"anchor\">#</a></h3><p>The <code>nz-table</code> can be used like  <a href=\"https://www.w3.org/TR/html401/struct/tables.html\" target=\"_blank\" rel=\"noopener\"><code> W3C Standard &lt;table&gt;</code></a>. Developers can control every part of the table as they wish.</p>\n<h3 id=\"component-enhancements\"><span>Component Enhancements</span><a onclick=\"window.location.hash = 'component-enhancements'\" class=\"anchor\">#</a></h3><p>The component in <code>nz-table</code> such as <code>th</code>, <code>td</code>, <code>thead</code> etc. are enhanced. Developers can make the table sortable, filterable, with fixed header, perform server side rendering etc. easily with the provided api.</p>\n<h3 id=\"data-processing\"><span>Data Processing</span><a onclick=\"window.location.hash = 'data-processing'\" class=\"anchor\">#</a></h3><p>The data passed to <code>[nzData]</code> is exported with <a href=\"https://angular.io/guide/template-syntax#statement-context\" target=\"_blank\" rel=\"noopener\">Template Context</a> after processing (including paging, sorting and filtering). <code>*ngFor</code> can be used to render current page data in table.</p>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-table</span> <span class=\"token attr-name\">#basicTable</span> <span class=\"token attr-name\">[nzData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Age<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Action<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let data of basicTable.data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.age}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.address}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Action ä¸€ {{data.name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-divider</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-divider</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Delete<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-table</span><span class=\"token punctuation\">></span></span></code></pre>\n"
    api: "<h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><h3 id=\"nz-table\"><span>nz-table</span><a onclick=\"window.location.hash = 'nz-table'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Global Config</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzData]</code></td>\n<td>Data record array to be rendered</td>\n<td><code>any[]</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFrontPagination]</code></td>\n<td>Whether to paginate data on client. Should be set to <code>false</code> if data is to be paginated on server side or if all the data is to be displayed at once in the table without any pagination</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTotal]</code></td>\n<td>Total data count. Should set when <code>nzServerRender</code> is <code>true</code></td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageIndex]</code></td>\n<td>pageIndex , double binding</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSize]</code></td>\n<td>pageSize, double binding</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowPagination]</code></td>\n<td>Whether to show pagination component at bottom of the table</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationPosition]</code></td>\n<td>Specify the position of pagination</td>\n<td><code>&#39;top&#39; | &#39;bottom&#39; | &#39;both&#39;</code></td>\n<td><code>bottom</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationType]</code></td>\n<td>Specify the size of pagination</td>\n<td><code>&#39;default&#39; | &#39;small&#39;</code></td>\n<td><code>default</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzBordered]</code></td>\n<td>Whether to show all table borders</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzOuterBordered]</code></td>\n<td>Whether to show table outer borders</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzWidthConfig]</code></td>\n<td>Set col width can not used with <code>[nzWidth]</code> of <code>th</code></td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzSize]</code></td>\n<td>Size of table</td>\n<td><code>&#39;middle&#39; | &#39;small&#39; | &#39;default&#39;</code></td>\n<td><code>&#39;default&#39;</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzLoading]</code></td>\n<td>Loading status of table</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzLoadingIndicator]</code></td>\n<td>The loading indicator</td>\n<td><code>TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzLoadingDelay]</code></td>\n<td>Specifies a delay in milliseconds for loading state (prevents flush)</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzScroll]</code></td>\n<td>Whether table can be scrolled in x/y direction. <code>x</code> or <code>y</code> can be a string that indicates the width and height of table body</td>\n<td><code>object</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTitle]</code></td>\n<td>Table title renderer</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFooter]</code></td>\n<td>Table footer renderer</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzNoResult]</code></td>\n<td>Custom no result content</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSizeOptions]</code></td>\n<td>Specify the sizeChanger options</td>\n<td><code>number[]</code></td>\n<td><code>[10, 20, 30, 40]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowQuickJumper]</code></td>\n<td>Determine whether you can jump to pages directly</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzShowSizeChanger]</code></td>\n<td>Determine whether <code>nzPageSize</code> can be changed</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzShowTotal]</code></td>\n<td>To display Pagination total number and range, same as Pagination</td>\n<td><code>TemplateRef&lt;{ $implicit: number, range: [ number, number ] }&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzItemRender]</code></td>\n<td>To customize Pagination item, same as Pagination</td>\n<td><code>TemplateRef&lt;{ $implicit: &#39;page&#39; | &#39;prev&#39; | &#39;next&#39;, page: number }&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzHideOnSinglePage]</code></td>\n<td>Whether to hide pagination on single page</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzSimple]</code></td>\n<td>Whether to use simple mode</td>\n<td><code>boolean</code></td>\n<td>-</td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzTemplateMode]</code></td>\n<td>Template modeï¼Œno need to pass data to <code>nzData</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualItemSize]</code></td>\n<td>The size of the items in the list, same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk itemSize</a></td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMaxBufferPx]</code></td>\n<td>The number of pixels worth of buffer to render for when rendering new items, same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk maxBufferPx</a></td>\n<td><code>number</code></td>\n<td><code>200</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMinBufferPx]</code></td>\n<td>The minimum amount of buffer rendered beyond the viewport (in pixels),same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk minBufferPx</a></td>\n<td><code>number</code></td>\n<td><code>100</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualForTrackBy]</code></td>\n<td>The TrackByFunction to be used for tracking changes.</td>\n<td><code>TrackByFunction&lt;T&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageIndexChange)</code></td>\n<td>Callback when <code>pageIndex</code> changes</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageSizeChange)</code></td>\n<td>Callback when <code>pageSize</code> changes</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzCurrentPageDataChange)</code></td>\n<td>Callback when current pageData changes</td>\n<td><code>EventEmitter&lt;any[]&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzQueryParams)</code></td>\n<td>Callback with params when working with server side pagination, sorting and filtering</td>\n<td><code>EventEmitter&lt;NzTableQueryParams&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"th\"><span>th</span><a onclick=\"window.location.hash = 'th'\" class=\"anchor\">#</a></h3><p>Checkbox property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>Whether <code>nz-checkbox</code> should be shown in the header</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>Whether the <code>nz-checkbox</code> is disabled</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td><code>nz-checkbox</code> indeterminate status</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>Checked status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>Callback when checked status changes</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Selection property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowRowSelection]</code></td>\n<td>Whether to show row selection options</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSelections]</code></td>\n<td>Selection options including <code>text</code> and <code>onSelect</code> callback function</td>\n<td><code>Array&lt;{ text: string, onSelect: any }&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Sort property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzSortFn]</code></td>\n<td>Sort function used to sort the data on client side (ref to Array.sort compareFunction). Should be set to <code>true</code> when using server side sorting</td>\n<td><code>((a: any, b: any, sortOrder?: string) =&gt; number)</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSortOrder]</code></td>\n<td>Sort direction</td>\n<td><code>&#39;ascend&#39; | &#39;descend&#39; | null</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSortDirections]</code></td>\n<td>Supported sort order, could be <code>&#39;ascend&#39;</code>, <code>&#39;descend&#39;</code>, <code>null</code></td>\n<td><code>Array&lt;&#39;ascend&#39; | &#39;descend&#39; | null&gt;</code></td>\n<td><code>[&#39;ascend&#39;, &#39;descend&#39;, null]</code></td>\n</tr>\n<tr>\n<td><code>(nzSortOrderChange)</code></td>\n<td>Callback when sort direction changes</td>\n<td><code>EventEmitter&lt;&#39;ascend&#39; | &#39;descend&#39; | null&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Filter property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowFilter]</code></td>\n<td>Whether to show filter</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterFn]</code></td>\n<td>Filter function used to filter the data on client side. Set to <code>true</code> when using server side filtering</td>\n<td><code>((value: any, data: any) =&gt; boolean;)</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilters]</code></td>\n<td>Filter options,  <code>text</code>, and <code>value</code> for callback, <code>byDefault</code> to enable filter by default</td>\n<td><code>Array&lt;{ text: string; value: any; byDefault?: boolean }&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterMultiple]</code></td>\n<td>Whether multiple mode filtering is enabled</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>(nzFilterChange)</code></td>\n<td>Callback when filter <code>value</code> changes</td>\n<td><code>EventEmitter&lt;any[] | any&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Style property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzWidth]</code></td>\n<td>Specify the column width, can not used when grouping columns</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzLeft]</code></td>\n<td>Left pixels, used to fixed column to left, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>Right pixels, used to fixed column to right, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>Specify how content is aligned</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>Whether insert line breaks within words</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>ellipsis cell content, not working with sorter and filters for now. Only work when nzTableLayout was <code>fixed</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<p>Other</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzColumnKey]</code></td>\n<td>column key, work with server sort and filter</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"td\"><span>td</span><a onclick=\"window.location.hash = 'td'\" class=\"anchor\">#</a></h3><p>Checkbox property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>Whether add nz-checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>Whether disable checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td>Indeterminate status</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>Checked status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>Checked status change callback</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[colSpan]</code></td>\n<td>how many columns the cell extends</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n<tr>\n<td><code>[rowSpan]</code></td>\n<td>how many rows the cell extends</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n</tbody></table>\n<p>Expand property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowExpand]</code></td>\n<td>Whether show expand icon</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzExpand]</code></td>\n<td>Current expand status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzExpandChange)</code></td>\n<td>Expand status change callback</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Style property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzLeft]</code></td>\n<td>Left pixels, used to fixed column to left, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>Right pixels, used to fixed column to right, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>Specify how content is aligned</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>Whether insert line breaks within words</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>ellipsis cell content, not working with sorter and filters for now. Only work when nzTableLayout was <code>fixed</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<p>Other property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzIndentSize]</code></td>\n<td>Indent size in pixels of tree data</td>\n<td><code>number</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"tr\"><span>tr</span><a onclick=\"window.location.hash = 'tr'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzExpand]</code></td>\n<td>Whether expand current rowï¼Œused with <code>nzExpand</code> of <code>td</code></td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-filter-trigger\"><span>nz-filter-trigger</span><a onclick=\"window.location.hash = 'nz-filter-trigger'\" class=\"anchor\">#</a></h3><p>Customized filter panel</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzDropdownMenu]</code></td>\n<td>Dropdown menu</td>\n<td><code>NzDropdownMenuComponent</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzVisible]</code></td>\n<td>whether the dropdown menu is visible, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzActive]</code></td>\n<td>whether the icon status is activated</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzHasBackdrop]</code></td>\n<td>Whether or not attach a backdrop.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>(nzVisibleChange)</code></td>\n<td>a callback function takes an argument: <code>nzVisible</code>, is executed when the visible state is changed</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"[nz-virtual-scroll]\"><span>[nz-virtual-scroll]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-virtual-scroll]'\" class=\"anchor\">#</a></h3><p>virtual scroll directive work with <code>ng-template</code>, type: <code>TemplateRef&lt;{ $implicit: any, index: number }&gt;</code>.</p>\n<h2 id=\"note\"><span>Note</span><a onclick=\"window.location.hash = 'note'\" class=\"anchor\">#</a></h2><p>In order to get better performance, all NG-ZORRO&#39;s components are running under <a href=\"https://angular.io/api/core/ChangeDetectionStrategy\" target=\"_blank\" rel=\"noopener\">OnPush</a> mode, this means any mutate to the <code>@Input()</code> data won&#39;t trigger change detection, please use immutable way to update array or object.</p>\n<pre class=\"language-typescript\"><code>    <span class=\"token comment\" spellcheck=\"true\">// add data</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      key    <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n      name   <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`Edward King </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n      age    <span class=\"token punctuation\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span>\n      address<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`London, Park Lane no. </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// remove data</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span><span class=\"token operator\">></span> d<span class=\"token punctuation\">.</span>key <span class=\"token operator\">!==</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Recommend using <a href=\"https://immerjs.github.io/immer/docs/introduction\" target=\"_blank\" rel=\"noopener\">immer</a> for a better development experience</p>\n"
  hey: 
    component: 
      basic: 
        demo: "<p>Simple table with actions.</p>\n"
        title: "Basic Usage"
      bordered: 
        demo: "<p>Add border, title and footer for table.</p>\n"
        title: "border, title and footer"
      break-word: 
        demo: "<p>Insert line breaks within words with <code>nzBreakWord</code> to prevent text from overflowing its content box</p>\n"
        title: "Break Word"
    title: "Hey"
    subtitle: ""
    type: "Layout"
    howToUse: "<p>A table displays rows of data.</p>\n<h2 id=\"when-to-use\"><span>When To Use</span><a onclick=\"window.location.hash = 'when-to-use'\" class=\"anchor\">#</a></h2><ul>\n<li>  To display a collection of structured data.</li>\n<li>  To sort, search, paginate and filter data.</li>\n</ul>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzTableModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/table'</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"how-to-use\"><span>How To Use</span><a onclick=\"window.location.hash = 'how-to-use'\" class=\"anchor\">#</a></h2><p>The Table component is both easy to use and highly customizable.</p>\n<h3 id=\"highly-customizable\"><span>Highly Customizable</span><a onclick=\"window.location.hash = 'highly-customizable'\" class=\"anchor\">#</a></h3><p>The <code>nz-table</code> can be used like  <a href=\"https://www.w3.org/TR/html401/struct/tables.html\" target=\"_blank\" rel=\"noopener\"><code> W3C Standard &lt;table&gt;</code></a>. Developers can control every part of the table as they wish.</p>\n<h3 id=\"component-enhancements\"><span>Component Enhancements</span><a onclick=\"window.location.hash = 'component-enhancements'\" class=\"anchor\">#</a></h3><p>The component in <code>nz-table</code> such as <code>th</code>, <code>td</code>, <code>thead</code> etc. are enhanced. Developers can make the table sortable, filterable, with fixed header, perform server side rendering etc. easily with the provided api.</p>\n<h3 id=\"data-processing\"><span>Data Processing</span><a onclick=\"window.location.hash = 'data-processing'\" class=\"anchor\">#</a></h3><p>The data passed to <code>[nzData]</code> is exported with <a href=\"https://angular.io/guide/template-syntax#statement-context\" target=\"_blank\" rel=\"noopener\">Template Context</a> after processing (including paging, sorting and filtering). <code>*ngFor</code> can be used to render current page data in table.</p>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-table</span> <span class=\"token attr-name\">#basicTable</span> <span class=\"token attr-name\">[nzData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Age<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Action<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let data of basicTable.data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.age}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.address}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Action ä¸€ {{data.name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-divider</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-divider</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Delete<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-table</span><span class=\"token punctuation\">></span></span></code></pre>\n"
    api: "<h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><h3 id=\"nz-table\"><span>nz-table</span><a onclick=\"window.location.hash = 'nz-table'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Global Config</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzData]</code></td>\n<td>Data record array to be rendered</td>\n<td><code>any[]</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFrontPagination]</code></td>\n<td>Whether to paginate data on client. Should be set to <code>false</code> if data is to be paginated on server side or if all the data is to be displayed at once in the table without any pagination</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTotal]</code></td>\n<td>Total data count. Should set when <code>nzServerRender</code> is <code>true</code></td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageIndex]</code></td>\n<td>pageIndex , double binding</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSize]</code></td>\n<td>pageSize, double binding</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowPagination]</code></td>\n<td>Whether to show pagination component at bottom of the table</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationPosition]</code></td>\n<td>Specify the position of pagination</td>\n<td><code>&#39;top&#39; | &#39;bottom&#39; | &#39;both&#39;</code></td>\n<td><code>bottom</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationType]</code></td>\n<td>Specify the size of pagination</td>\n<td><code>&#39;default&#39; | &#39;small&#39;</code></td>\n<td><code>default</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzBordered]</code></td>\n<td>Whether to show all table borders</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzOuterBordered]</code></td>\n<td>Whether to show table outer borders</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzWidthConfig]</code></td>\n<td>Set col width can not used with <code>[nzWidth]</code> of <code>th</code></td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzSize]</code></td>\n<td>Size of table</td>\n<td><code>&#39;middle&#39; | &#39;small&#39; | &#39;default&#39;</code></td>\n<td><code>&#39;default&#39;</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzLoading]</code></td>\n<td>Loading status of table</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzLoadingIndicator]</code></td>\n<td>The loading indicator</td>\n<td><code>TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzLoadingDelay]</code></td>\n<td>Specifies a delay in milliseconds for loading state (prevents flush)</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzScroll]</code></td>\n<td>Whether table can be scrolled in x/y direction. <code>x</code> or <code>y</code> can be a string that indicates the width and height of table body</td>\n<td><code>object</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTitle]</code></td>\n<td>Table title renderer</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFooter]</code></td>\n<td>Table footer renderer</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzNoResult]</code></td>\n<td>Custom no result content</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSizeOptions]</code></td>\n<td>Specify the sizeChanger options</td>\n<td><code>number[]</code></td>\n<td><code>[10, 20, 30, 40]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowQuickJumper]</code></td>\n<td>Determine whether you can jump to pages directly</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzShowSizeChanger]</code></td>\n<td>Determine whether <code>nzPageSize</code> can be changed</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzShowTotal]</code></td>\n<td>To display Pagination total number and range, same as Pagination</td>\n<td><code>TemplateRef&lt;{ $implicit: number, range: [ number, number ] }&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzItemRender]</code></td>\n<td>To customize Pagination item, same as Pagination</td>\n<td><code>TemplateRef&lt;{ $implicit: &#39;page&#39; | &#39;prev&#39; | &#39;next&#39;, page: number }&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzHideOnSinglePage]</code></td>\n<td>Whether to hide pagination on single page</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzSimple]</code></td>\n<td>Whether to use simple mode</td>\n<td><code>boolean</code></td>\n<td>-</td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzTemplateMode]</code></td>\n<td>Template modeï¼Œno need to pass data to <code>nzData</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualItemSize]</code></td>\n<td>The size of the items in the list, same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk itemSize</a></td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMaxBufferPx]</code></td>\n<td>The number of pixels worth of buffer to render for when rendering new items, same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk maxBufferPx</a></td>\n<td><code>number</code></td>\n<td><code>200</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMinBufferPx]</code></td>\n<td>The minimum amount of buffer rendered beyond the viewport (in pixels),same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk minBufferPx</a></td>\n<td><code>number</code></td>\n<td><code>100</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualForTrackBy]</code></td>\n<td>The TrackByFunction to be used for tracking changes.</td>\n<td><code>TrackByFunction&lt;T&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageIndexChange)</code></td>\n<td>Callback when <code>pageIndex</code> changes</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageSizeChange)</code></td>\n<td>Callback when <code>pageSize</code> changes</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzCurrentPageDataChange)</code></td>\n<td>Callback when current pageData changes</td>\n<td><code>EventEmitter&lt;any[]&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzQueryParams)</code></td>\n<td>Callback with params when working with server side pagination, sorting and filtering</td>\n<td><code>EventEmitter&lt;NzTableQueryParams&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"th\"><span>th</span><a onclick=\"window.location.hash = 'th'\" class=\"anchor\">#</a></h3><p>Checkbox property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>Whether <code>nz-checkbox</code> should be shown in the header</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>Whether the <code>nz-checkbox</code> is disabled</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td><code>nz-checkbox</code> indeterminate status</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>Checked status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>Callback when checked status changes</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Selection property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowRowSelection]</code></td>\n<td>Whether to show row selection options</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSelections]</code></td>\n<td>Selection options including <code>text</code> and <code>onSelect</code> callback function</td>\n<td><code>Array&lt;{ text: string, onSelect: any }&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Sort property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzSortFn]</code></td>\n<td>Sort function used to sort the data on client side (ref to Array.sort compareFunction). Should be set to <code>true</code> when using server side sorting</td>\n<td><code>((a: any, b: any, sortOrder?: string) =&gt; number)</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSortOrder]</code></td>\n<td>Sort direction</td>\n<td><code>&#39;ascend&#39; | &#39;descend&#39; | null</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSortDirections]</code></td>\n<td>Supported sort order, could be <code>&#39;ascend&#39;</code>, <code>&#39;descend&#39;</code>, <code>null</code></td>\n<td><code>Array&lt;&#39;ascend&#39; | &#39;descend&#39; | null&gt;</code></td>\n<td><code>[&#39;ascend&#39;, &#39;descend&#39;, null]</code></td>\n</tr>\n<tr>\n<td><code>(nzSortOrderChange)</code></td>\n<td>Callback when sort direction changes</td>\n<td><code>EventEmitter&lt;&#39;ascend&#39; | &#39;descend&#39; | null&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Filter property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowFilter]</code></td>\n<td>Whether to show filter</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterFn]</code></td>\n<td>Filter function used to filter the data on client side. Set to <code>true</code> when using server side filtering</td>\n<td><code>((value: any, data: any) =&gt; boolean;)</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilters]</code></td>\n<td>Filter options,  <code>text</code>, and <code>value</code> for callback, <code>byDefault</code> to enable filter by default</td>\n<td><code>Array&lt;{ text: string; value: any; byDefault?: boolean }&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterMultiple]</code></td>\n<td>Whether multiple mode filtering is enabled</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>(nzFilterChange)</code></td>\n<td>Callback when filter <code>value</code> changes</td>\n<td><code>EventEmitter&lt;any[] | any&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Style property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzWidth]</code></td>\n<td>Specify the column width, can not used when grouping columns</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzLeft]</code></td>\n<td>Left pixels, used to fixed column to left, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>Right pixels, used to fixed column to right, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>Specify how content is aligned</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>Whether insert line breaks within words</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>ellipsis cell content, not working with sorter and filters for now. Only work when nzTableLayout was <code>fixed</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<p>Other</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzColumnKey]</code></td>\n<td>column key, work with server sort and filter</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"td\"><span>td</span><a onclick=\"window.location.hash = 'td'\" class=\"anchor\">#</a></h3><p>Checkbox property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>Whether add nz-checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>Whether disable checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td>Indeterminate status</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>Checked status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>Checked status change callback</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[colSpan]</code></td>\n<td>how many columns the cell extends</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n<tr>\n<td><code>[rowSpan]</code></td>\n<td>how many rows the cell extends</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n</tbody></table>\n<p>Expand property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowExpand]</code></td>\n<td>Whether show expand icon</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzExpand]</code></td>\n<td>Current expand status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzExpandChange)</code></td>\n<td>Expand status change callback</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Style property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzLeft]</code></td>\n<td>Left pixels, used to fixed column to left, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>Right pixels, used to fixed column to right, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>Specify how content is aligned</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>Whether insert line breaks within words</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>ellipsis cell content, not working with sorter and filters for now. Only work when nzTableLayout was <code>fixed</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<p>Other property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzIndentSize]</code></td>\n<td>Indent size in pixels of tree data</td>\n<td><code>number</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"tr\"><span>tr</span><a onclick=\"window.location.hash = 'tr'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzExpand]</code></td>\n<td>Whether expand current rowï¼Œused with <code>nzExpand</code> of <code>td</code></td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-filter-trigger\"><span>nz-filter-trigger</span><a onclick=\"window.location.hash = 'nz-filter-trigger'\" class=\"anchor\">#</a></h3><p>Customized filter panel</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzDropdownMenu]</code></td>\n<td>Dropdown menu</td>\n<td><code>NzDropdownMenuComponent</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzVisible]</code></td>\n<td>whether the dropdown menu is visible, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzActive]</code></td>\n<td>whether the icon status is activated</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzHasBackdrop]</code></td>\n<td>Whether or not attach a backdrop.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>(nzVisibleChange)</code></td>\n<td>a callback function takes an argument: <code>nzVisible</code>, is executed when the visible state is changed</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"[nz-virtual-scroll]\"><span>[nz-virtual-scroll]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-virtual-scroll]'\" class=\"anchor\">#</a></h3><p>virtual scroll directive work with <code>ng-template</code>, type: <code>TemplateRef&lt;{ $implicit: any, index: number }&gt;</code>.</p>\n<h2 id=\"note\"><span>Note</span><a onclick=\"window.location.hash = 'note'\" class=\"anchor\">#</a></h2><p>In order to get better performance, all NG-ZORRO&#39;s components are running under <a href=\"https://angular.io/api/core/ChangeDetectionStrategy\" target=\"_blank\" rel=\"noopener\">OnPush</a> mode, this means any mutate to the <code>@Input()</code> data won&#39;t trigger change detection, please use immutable way to update array or object.</p>\n<pre class=\"language-typescript\"><code>    <span class=\"token comment\" spellcheck=\"true\">// add data</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      key    <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n      name   <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`Edward King </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n      age    <span class=\"token punctuation\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span>\n      address<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`London, Park Lane no. </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// remove data</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span><span class=\"token operator\">></span> d<span class=\"token punctuation\">.</span>key <span class=\"token operator\">!==</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Recommend using <a href=\"https://immerjs.github.io/immer/docs/introduction\" target=\"_blank\" rel=\"noopener\">immer</a> for a better development experience</p>\n"
  table: 
    component: 
      basic: 
        demo: "<p>Simple table with actions.</p>\n"
        title: "Basic Usage"
      bordered: 
        demo: "<p>Add border, title and footer for table.</p>\n"
        title: "border, title and footer"
      break-word: 
        demo: "<p>Insert line breaks within words with <code>nzBreakWord</code> to prevent text from overflowing its content box</p>\n"
        title: "Break Word"
    title: "Table"
    subtitle: ""
    type: "Data Display"
    howToUse: "<p>A table displays rows of data.</p>\n<h2 id=\"when-to-use\"><span>When To Use</span><a onclick=\"window.location.hash = 'when-to-use'\" class=\"anchor\">#</a></h2><ul>\n<li>  To display a collection of structured data.</li>\n<li>  To sort, search, paginate and filter data.</li>\n</ul>\n<pre class=\"language-ts\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NzTableModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ng-zorro-antd/table'</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"how-to-use\"><span>How To Use</span><a onclick=\"window.location.hash = 'how-to-use'\" class=\"anchor\">#</a></h2><p>The Table component is both easy to use and highly customizable.</p>\n<h3 id=\"highly-customizable\"><span>Highly Customizable</span><a onclick=\"window.location.hash = 'highly-customizable'\" class=\"anchor\">#</a></h3><p>The <code>nz-table</code> can be used like  <a href=\"https://www.w3.org/TR/html401/struct/tables.html\" target=\"_blank\" rel=\"noopener\"><code> W3C Standard &lt;table&gt;</code></a>. Developers can control every part of the table as they wish.</p>\n<h3 id=\"component-enhancements\"><span>Component Enhancements</span><a onclick=\"window.location.hash = 'component-enhancements'\" class=\"anchor\">#</a></h3><p>The component in <code>nz-table</code> such as <code>th</code>, <code>td</code>, <code>thead</code> etc. are enhanced. Developers can make the table sortable, filterable, with fixed header, perform server side rendering etc. easily with the provided api.</p>\n<h3 id=\"data-processing\"><span>Data Processing</span><a onclick=\"window.location.hash = 'data-processing'\" class=\"anchor\">#</a></h3><p>The data passed to <code>[nzData]</code> is exported with <a href=\"https://angular.io/guide/template-syntax#statement-context\" target=\"_blank\" rel=\"noopener\">Template Context</a> after processing (including paging, sorting and filtering). <code>*ngFor</code> can be used to render current page data in table.</p>\n<pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-table</span> <span class=\"token attr-name\">#basicTable</span> <span class=\"token attr-name\">[nzData]</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>dataSet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Age<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Action<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span> <span class=\"token attr-name\">*ngFor</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>let data of basicTable.data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.age}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>{{data.address}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Action ä¸€ {{data.name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nz-divider</span> <span class=\"token attr-name\">nzType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-divider</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><span class=\"token punctuation\">></span></span>Delete<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nz-table</span><span class=\"token punctuation\">></span></span></code></pre>\n"
    api: "<h2 id=\"api\"><span>API</span><a onclick=\"window.location.hash = 'api'\" class=\"anchor\">#</a></h2><h3 id=\"nz-table\"><span>nz-table</span><a onclick=\"window.location.hash = 'nz-table'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n<th>Global Config</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzData]</code></td>\n<td>Data record array to be rendered</td>\n<td><code>any[]</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFrontPagination]</code></td>\n<td>Whether to paginate data on client. Should be set to <code>false</code> if data is to be paginated on server side or if all the data is to be displayed at once in the table without any pagination</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTotal]</code></td>\n<td>Total data count. Should set when <code>nzServerRender</code> is <code>true</code></td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageIndex]</code></td>\n<td>pageIndex , double binding</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSize]</code></td>\n<td>pageSize, double binding</td>\n<td><code>number</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowPagination]</code></td>\n<td>Whether to show pagination component at bottom of the table</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationPosition]</code></td>\n<td>Specify the position of pagination</td>\n<td><code>&#39;top&#39; | &#39;bottom&#39; | &#39;both&#39;</code></td>\n<td><code>bottom</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPaginationType]</code></td>\n<td>Specify the size of pagination</td>\n<td><code>&#39;default&#39; | &#39;small&#39;</code></td>\n<td><code>default</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzBordered]</code></td>\n<td>Whether to show all table borders</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzOuterBordered]</code></td>\n<td>Whether to show table outer borders</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzWidthConfig]</code></td>\n<td>Set col width can not used with <code>[nzWidth]</code> of <code>th</code></td>\n<td><code>string[]</code></td>\n<td><code>[]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzSize]</code></td>\n<td>Size of table</td>\n<td><code>&#39;middle&#39; | &#39;small&#39; | &#39;default&#39;</code></td>\n<td><code>&#39;default&#39;</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzLoading]</code></td>\n<td>Loading status of table</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzLoadingIndicator]</code></td>\n<td>The loading indicator</td>\n<td><code>TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzLoadingDelay]</code></td>\n<td>Specifies a delay in milliseconds for loading state (prevents flush)</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzScroll]</code></td>\n<td>Whether table can be scrolled in x/y direction. <code>x</code> or <code>y</code> can be a string that indicates the width and height of table body</td>\n<td><code>object</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzTitle]</code></td>\n<td>Table title renderer</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzFooter]</code></td>\n<td>Table footer renderer</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzNoResult]</code></td>\n<td>Custom no result content</td>\n<td><code>string | TemplateRef&lt;void&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzPageSizeOptions]</code></td>\n<td>Specify the sizeChanger options</td>\n<td><code>number[]</code></td>\n<td><code>[10, 20, 30, 40]</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzShowQuickJumper]</code></td>\n<td>Determine whether you can jump to pages directly</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzShowSizeChanger]</code></td>\n<td>Determine whether <code>nzPageSize</code> can be changed</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzShowTotal]</code></td>\n<td>To display Pagination total number and range, same as Pagination</td>\n<td><code>TemplateRef&lt;{ $implicit: number, range: [ number, number ] }&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzItemRender]</code></td>\n<td>To customize Pagination item, same as Pagination</td>\n<td><code>TemplateRef&lt;{ $implicit: &#39;page&#39; | &#39;prev&#39; | &#39;next&#39;, page: number }&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzHideOnSinglePage]</code></td>\n<td>Whether to hide pagination on single page</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzSimple]</code></td>\n<td>Whether to use simple mode</td>\n<td><code>boolean</code></td>\n<td>-</td>\n<td>âœ…</td>\n</tr>\n<tr>\n<td><code>[nzTemplateMode]</code></td>\n<td>Template modeï¼Œno need to pass data to <code>nzData</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualItemSize]</code></td>\n<td>The size of the items in the list, same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk itemSize</a></td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMaxBufferPx]</code></td>\n<td>The number of pixels worth of buffer to render for when rendering new items, same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk maxBufferPx</a></td>\n<td><code>number</code></td>\n<td><code>200</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualMinBufferPx]</code></td>\n<td>The minimum amount of buffer rendered beyond the viewport (in pixels),same as <a href=\"https://material.angular.io/cdk/scrolling/api\" target=\"_blank\" rel=\"noopener\">cdk minBufferPx</a></td>\n<td><code>number</code></td>\n<td><code>100</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>[nzVirtualForTrackBy]</code></td>\n<td>The TrackByFunction to be used for tracking changes.</td>\n<td><code>TrackByFunction&lt;T&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageIndexChange)</code></td>\n<td>Callback when <code>pageIndex</code> changes</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzPageSizeChange)</code></td>\n<td>Callback when <code>pageSize</code> changes</td>\n<td><code>EventEmitter&lt;number&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzCurrentPageDataChange)</code></td>\n<td>Callback when current pageData changes</td>\n<td><code>EventEmitter&lt;any[]&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td><code>(nzQueryParams)</code></td>\n<td>Callback with params when working with server side pagination, sorting and filtering</td>\n<td><code>EventEmitter&lt;NzTableQueryParams&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"th\"><span>th</span><a onclick=\"window.location.hash = 'th'\" class=\"anchor\">#</a></h3><p>Checkbox property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>Whether <code>nz-checkbox</code> should be shown in the header</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>Whether the <code>nz-checkbox</code> is disabled</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td><code>nz-checkbox</code> indeterminate status</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>Checked status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>Callback when checked status changes</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Selection property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowRowSelection]</code></td>\n<td>Whether to show row selection options</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSelections]</code></td>\n<td>Selection options including <code>text</code> and <code>onSelect</code> callback function</td>\n<td><code>Array&lt;{ text: string, onSelect: any }&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Sort property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzSortFn]</code></td>\n<td>Sort function used to sort the data on client side (ref to Array.sort compareFunction). Should be set to <code>true</code> when using server side sorting</td>\n<td><code>((a: any, b: any, sortOrder?: string) =&gt; number)</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSortOrder]</code></td>\n<td>Sort direction</td>\n<td><code>&#39;ascend&#39; | &#39;descend&#39; | null</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzSortDirections]</code></td>\n<td>Supported sort order, could be <code>&#39;ascend&#39;</code>, <code>&#39;descend&#39;</code>, <code>null</code></td>\n<td><code>Array&lt;&#39;ascend&#39; | &#39;descend&#39; | null&gt;</code></td>\n<td><code>[&#39;ascend&#39;, &#39;descend&#39;, null]</code></td>\n</tr>\n<tr>\n<td><code>(nzSortOrderChange)</code></td>\n<td>Callback when sort direction changes</td>\n<td><code>EventEmitter&lt;&#39;ascend&#39; | &#39;descend&#39; | null&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Filter property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowFilter]</code></td>\n<td>Whether to show filter</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterFn]</code></td>\n<td>Filter function used to filter the data on client side. Set to <code>true</code> when using server side filtering</td>\n<td><code>((value: any, data: any) =&gt; boolean;)</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilters]</code></td>\n<td>Filter options,  <code>text</code>, and <code>value</code> for callback, <code>byDefault</code> to enable filter by default</td>\n<td><code>Array&lt;{ text: string; value: any; byDefault?: boolean }&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzFilterMultiple]</code></td>\n<td>Whether multiple mode filtering is enabled</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>(nzFilterChange)</code></td>\n<td>Callback when filter <code>value</code> changes</td>\n<td><code>EventEmitter&lt;any[] | any&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Style property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzWidth]</code></td>\n<td>Specify the column width, can not used when grouping columns</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzLeft]</code></td>\n<td>Left pixels, used to fixed column to left, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>Right pixels, used to fixed column to right, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>Specify how content is aligned</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>Whether insert line breaks within words</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>ellipsis cell content, not working with sorter and filters for now. Only work when nzTableLayout was <code>fixed</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<p>Other</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzColumnKey]</code></td>\n<td>column key, work with server sort and filter</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"td\"><span>td</span><a onclick=\"window.location.hash = 'td'\" class=\"anchor\">#</a></h3><p>Checkbox property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowCheckbox]</code></td>\n<td>Whether add nz-checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzDisabled]</code></td>\n<td>Whether disable checkbox</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzIndeterminate]</code></td>\n<td>Indeterminate status</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzChecked]</code></td>\n<td>Checked status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzCheckedChange)</code></td>\n<td>Checked status change callback</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[colSpan]</code></td>\n<td>how many columns the cell extends</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n<tr>\n<td><code>[rowSpan]</code></td>\n<td>how many rows the cell extends</td>\n<td><code>number</code></td>\n<td><code>null</code></td>\n</tr>\n</tbody></table>\n<p>Expand property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzShowExpand]</code></td>\n<td>Whether show expand icon</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzExpand]</code></td>\n<td>Current expand status, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>(nzExpandChange)</code></td>\n<td>Expand status change callback</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p>Style property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzLeft]</code></td>\n<td>Left pixels, used to fixed column to left, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzRight]</code></td>\n<td>Right pixels, used to fixed column to right, auto calc when set to <code>true</code> and disable fixed when <code>false</code></td>\n<td><code>string | boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzAlign]</code></td>\n<td>Specify how content is aligned</td>\n<td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzBreakWord]</code></td>\n<td>Whether insert line breaks within words</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzEllipsis]</code></td>\n<td>ellipsis cell content, not working with sorter and filters for now. Only work when nzTableLayout was <code>fixed</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<p>Other property</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzIndentSize]</code></td>\n<td>Indent size in pixels of tree data</td>\n<td><code>number</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"tr\"><span>tr</span><a onclick=\"window.location.hash = 'tr'\" class=\"anchor\">#</a></h3><table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzExpand]</code></td>\n<td>Whether expand current rowï¼Œused with <code>nzExpand</code> of <code>td</code></td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"nz-filter-trigger\"><span>nz-filter-trigger</span><a onclick=\"window.location.hash = 'nz-filter-trigger'\" class=\"anchor\">#</a></h3><p>Customized filter panel</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>[nzDropdownMenu]</code></td>\n<td>Dropdown menu</td>\n<td><code>NzDropdownMenuComponent</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzVisible]</code></td>\n<td>whether the dropdown menu is visible, double binding</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>[nzActive]</code></td>\n<td>whether the icon status is activated</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>[nzHasBackdrop]</code></td>\n<td>Whether or not attach a backdrop.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>(nzVisibleChange)</code></td>\n<td>a callback function takes an argument: <code>nzVisible</code>, is executed when the visible state is changed</td>\n<td><code>EventEmitter&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody></table>\n<h3 id=\"[nz-virtual-scroll]\"><span>[nz-virtual-scroll]</span><label class=\"api-type-label directive\">directive</label><a onclick=\"window.location.hash = '[nz-virtual-scroll]'\" class=\"anchor\">#</a></h3><p>virtual scroll directive work with <code>ng-template</code>, type: <code>TemplateRef&lt;{ $implicit: any, index: number }&gt;</code>.</p>\n<h2 id=\"note\"><span>Note</span><a onclick=\"window.location.hash = 'note'\" class=\"anchor\">#</a></h2><p>In order to get better performance, all NG-ZORRO&#39;s components are running under <a href=\"https://angular.io/api/core/ChangeDetectionStrategy\" target=\"_blank\" rel=\"noopener\">OnPush</a> mode, this means any mutate to the <code>@Input()</code> data won&#39;t trigger change detection, please use immutable way to update array or object.</p>\n<pre class=\"language-typescript\"><code>    <span class=\"token comment\" spellcheck=\"true\">// add data</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      key    <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n      name   <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`Edward King </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n      age    <span class=\"token punctuation\">:</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">,</span>\n      address<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`London, Park Lane no. </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// remove data</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSet<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=</span><span class=\"token operator\">></span> d<span class=\"token punctuation\">.</span>key <span class=\"token operator\">!==</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Recommend using <a href=\"https://immerjs.github.io/immer/docs/introduction\" target=\"_blank\" rel=\"noopener\">immer</a> for a better development experience</p>\n"
